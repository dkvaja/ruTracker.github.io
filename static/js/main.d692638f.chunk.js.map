{"version":3,"sources":["components/Transactions.jsx","components/Dashboard.js","App.js","Themes/index.js","index.js"],"names":["descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","onSelectAllClick","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","Checkbox","color","indeterminate","checked","onChange","inputProps","headCell","align","sortDirection","TableSortLabel","active","direction","onClick","property","event","Box","component","sx","visuallyHidden","EnhancedTableToolbar","handleDeleteTransaction","selected","Toolbar","pl","sm","pr","xs","bgcolor","theme","alpha","palette","primary","main","action","activatedOpacity","Typography","flex","variant","p","fontWeight","Tooltip","title","IconButton","Transactions","transaction","React","setOrder","setOrderBy","setSelected","page","setPage","rowsPerPage","setRowsPerPage","dateParser","date","console","log","d","Date","getDate","getMonth","getFullYear","emptyRows","Math","max","length","width","Paper","mb","TableContainer","Table","minWidth","size","target","newSelecteds","n","TableBody","slice","row","name","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","tabIndex","scope","reason","amount","addedOn","style","height","colSpan","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","value","Dashboard","handleTransactions","useState","setAmount","setReason","total","setTotal","spent","setSpent","received","setReceived","Grid","container","justifyContent","alignItems","minHeight","elevation","borderRadius","display","flexDirection","px","py","gutterBottom","my","gridGap","item","boxShadow","Stack","spacing","mt","TextField","type","placeholder","fullWidth","min","Button","disabled","num","alert","addAmount","Link","to","App","setTransaction","useEffect","localStorage","getItem","JSON","parse","round","random","toJSON","setItem","stringify","args","filteredTransactions","filter","t","push","exact","path","customTheme","createTheme","typography","fontFamily","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.d692638f.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { alpha } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { visuallyHidden } from '@mui/utils';\r\n\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) {\r\n            return order;\r\n        }\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n    {\r\n        id: 'index',\r\n        numeric: true,\r\n        disablePadding: true,\r\n        label: 'Sr. No',\r\n    },\r\n    {\r\n        id: 'reason',\r\n        numeric: false,\r\n        disablePadding: false,\r\n        label: 'Reason',\r\n    },\r\n    {\r\n        id: 'amount',\r\n        numeric: true,\r\n        disablePadding: false,\r\n        label: 'Amount',\r\n    },\r\n    {\r\n        id: 'date',\r\n        numeric: false,\r\n        disablePadding: false,\r\n        label: 'Added On',\r\n    },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n    const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } =\r\n        props;\r\n    const createSortHandler = (property) => (event) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        color=\"primary\"\r\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                        checked={rowCount > 0 && numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n                        inputProps={{\r\n                            'aria-label': 'select all desserts',\r\n                        }}\r\n                    />\r\n                </TableCell>\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align={'left'}\r\n                        padding={headCell.disablePadding ? 'none' : 'normal'}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={orderBy === headCell.id}\r\n                            direction={orderBy === headCell.id ? order : 'asc'}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                        >\r\n                            {headCell.label}\r\n                            {orderBy === headCell.id ? (\r\n                                <Box component=\"span\" sx={visuallyHidden}>\r\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                                </Box>\r\n                            ) : null}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    numSelected: PropTypes.number.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n    const { numSelected, handleDeleteTransaction, selected } = props;\r\n\r\n    return (\r\n        <Toolbar\r\n            sx={{\r\n                pl: { sm: 2 },\r\n                pr: { xs: 1, sm: 1 },\r\n                ...(numSelected > 0 && {\r\n                    bgcolor: (theme) =>\r\n                        alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity),\r\n                }),\r\n            }}\r\n        >\r\n            {numSelected > 0 ? (\r\n                <Typography\r\n                    sx={{ flex: '1 1 100%' }}\r\n                    color=\"inherit\"\r\n                    variant=\"subtitle1\"\r\n                    component=\"div\"\r\n                >\r\n                    {numSelected} selected\r\n                </Typography>\r\n            ) : (\r\n                <Typography\r\n                    sx={{ flex: '1 1 100%', p: 1 }}\r\n                    variant=\"h4\"\r\n                    align='center'\r\n                    fontWeight='bold'\r\n                    id=\"tableTitle\"\r\n                    component=\"div\"\r\n                    color='white'\r\n                    bgcolor='primary.main'\r\n                >\r\n                    Transaction List\r\n                </Typography>\r\n            )}\r\n\r\n            {numSelected > 0 ? (\r\n                <Tooltip title=\"Delete\">\r\n                    <IconButton onClick={() => handleDeleteTransaction(selected)} >\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            ) : null}\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n    numSelected: PropTypes.number.isRequired,\r\n    selected: PropTypes.array.isRequired,\r\n    handleDeleteTransaction: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function Transactions({ handleDeleteTransaction, transaction }) {\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('calories');\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = transaction.map((n) => n.id);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event, id) => {\r\n        console.log(\"i am fired\", id)\r\n        const selectedIndex = selected.indexOf(id);\r\n        let newSelected = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, id);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                selected.slice(0, selectedIndex),\r\n                selected.slice(selectedIndex + 1),\r\n            );\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const dateParser = (date) => {\r\n        console.log(date, \"date\");\r\n        let d = new Date(date);\r\n        console.log(d.getDate(), d.getMonth() + 1, d.getFullYear(), \"d\");\r\n        return (d.getDate() + \"/\" + \"0\" + (d.getMonth() + 1) + \"/\" + d.getFullYear());\r\n\r\n    }\r\n\r\n    const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n\r\n    const emptyRows =\r\n        page > 0 ? Math.max(0, (1 + page) * rowsPerPage - transaction.length) : 0;\r\n\r\n    return (\r\n        <Box sx={{ width: '100%', p: 2 }}>\r\n            <Paper sx={{ width: '100%', mb: 2 }}>\r\n                <EnhancedTableToolbar numSelected={selected.length} selected={selected} handleDeleteTransaction={handleDeleteTransaction} />\r\n                <TableContainer>\r\n                    <Table\r\n                        sx={{ minWidth: 550 }}\r\n                        aria-labelledby=\"tableTitle\"\r\n                        size={'medium'}\r\n                    >\r\n                        <EnhancedTableHead\r\n                            numSelected={selected.length}\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onSelectAllClick={handleSelectAllClick}\r\n                            onRequestSort={handleRequestSort}\r\n                            rowCount={transaction.length}\r\n                        />\r\n                        <TableBody>\r\n                            {/* if you don't need to support IE11, you can replace the `stableSort` call with:\r\n                 transaction.slice().sort(getComparator(order, orderBy)) */}\r\n                            {transaction && transaction.length > 0 ? stableSort(transaction, getComparator(order, orderBy))\r\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                .map((row, index) => {\r\n                                    const isItemSelected = isSelected(row.id);\r\n                                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                    return (\r\n                                        <TableRow\r\n                                            hover\r\n                                            onClick={(event) => handleClick(event, row.id)}\r\n                                            role=\"checkbox\"\r\n                                            aria-checked={isItemSelected}\r\n                                            tabIndex={-1}\r\n                                            key={row.id}\r\n                                            selected={isItemSelected}\r\n                                        >\r\n                                            <TableCell padding=\"checkbox\">\r\n                                                <Checkbox\r\n                                                    color=\"primary\"\r\n                                                    checked={isItemSelected}\r\n                                                    inputProps={{\r\n                                                        'aria-labelledby': labelId,\r\n                                                    }}\r\n                                                />\r\n                                            </TableCell>\r\n                                            <TableCell\r\n                                                component=\"th\"\r\n                                                id={labelId}\r\n                                                scope=\"row\"\r\n                                                padding=\"none\"\r\n                                            >\r\n                                                {row.id}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\">{row.reason}</TableCell>\r\n                                            <TableCell align=\"left\">{row.amount}</TableCell>\r\n                                            <TableCell align=\"left\">{dateParser(row.addedOn)}</TableCell>\r\n                                        </TableRow>\r\n                                    );\r\n                                })\r\n                                :\r\n                                null\r\n                            }\r\n                            {emptyRows > 0 && (\r\n                                <TableRow\r\n                                    style={{\r\n                                        height: (53) * emptyRows,\r\n                                    }}\r\n                                >\r\n                                    <TableCell colSpan={6} />\r\n                                </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25]}\r\n                    component=\"div\"\r\n                    count={transaction.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onPageChange={handleChangePage}\r\n                    onRowsPerPageChange={handleChangeRowsPerPage}\r\n                />\r\n            </Paper >\r\n        </Box >\r\n    );\r\n}\r\n","import { Grid, Paper, Typography, Box, Button, Stack, TextField } from '@mui/material'\r\nimport React, { useState, useEffect } from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport Transactions from './Transactions';\r\n\r\nexport default function Dashboard({ handleTransactions }) {\r\n    const [amount, setAmount] = useState('');\r\n    const [reason, setReason] = useState('')\r\n    const [total, setTotal] = useState(0);\r\n    const [spent, setSpent] = useState(0);\r\n    const [received, setReceived] = useState(0);\r\n\r\n    const handleAmountchange = (event) => {\r\n        setAmount(parseInt(event.target.value));\r\n    }\r\n    const handleReason = (event) => {\r\n        setReason(event.target.value);\r\n    }\r\n\r\n    const addAmount = () => {\r\n        if (amount < 0) {\r\n            setSpent(-1 * amount + spent);\r\n        }\r\n        else {\r\n            setReceived(amount + received)\r\n        }\r\n        let num = +(total + amount);\r\n        if (num < 0) {\r\n            alert(\"Spent is to bigger\");\r\n        }\r\n        setTotal(num);\r\n        handleTransactions(amount, reason);\r\n        // setAmount('');\r\n    }\r\n    return (\r\n        <>\r\n            <Grid container justifyContent='center' alignItems='center' sx={{\r\n                bgcolor: 'text.disabled',\r\n                width: '100vw',\r\n                minHeight: '100vh',\r\n            }} >\r\n                <Paper elevation={4} sx={{\r\n                    borderRadius: 3,\r\n                    minWidth: '350px',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    px: 3,\r\n                    py: 3\r\n                }} >\r\n                    <Typography color='primary' fontWeight='bold' variant='h4' align='center' gutterBottom >\r\n                        RuTracker\r\n                    </Typography>\r\n                    <Paper sx={{\r\n                        bgcolor: 'primary.main',\r\n                        px: 2,\r\n                        my: 1,\r\n                        color: '#fff',\r\n                        py: 2,\r\n                    }} elevation={2} >\r\n                        <Typography variant='h5' fontWeight='bold' align='center'  >\r\n                            Total : {total ? total : 0}\r\n                        </Typography>\r\n                    </Paper>\r\n                    <Grid container\r\n                        sx={{\r\n                            // width: '100%',\r\n                            my: 1,\r\n                            color: '#fff',\r\n                            display: 'grid',\r\n                            gridGap: 1\r\n                        }}  >\r\n                        <Grid item sx={{\r\n                            bgcolor: 'success.light',\r\n                            display: 'flex',\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                            boxShadow: 2,\r\n                            minHeight: '50px',\r\n                            borderRadius: 1,\r\n                            my: 1\r\n                        }} >\r\n                            <Typography variant='h5' fontWeight='bold' align='center'  >\r\n                                {received}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item sx={{\r\n                            bgcolor: 'error.light',\r\n                            borderRadius: 1,\r\n                            boxShadow: 2,\r\n                            display: 'flex',\r\n                            minHeight: '50px',\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center'\r\n                        }} >\r\n                            <Typography variant='h5' fontWeight='bold' align='center'  >\r\n                                {spent}\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Stack direction=\"column\" justifyContent=\"center\" alignItems=\"center\" spacing={1} mt={1}>\r\n                        <TextField id=\"outlined-basic\" label=\"Reason\" type='text' variant=\"outlined\" value={reason} onChange={handleReason} placeholder={'Reason'} fullWidth />\r\n                        <TextField id=\"outlined-basic\" label=\"Amount\" type='number' min={1} variant=\"outlined\" value={amount} onChange={handleAmountchange} placeholder={'-  spent & + received'} fullWidth />\r\n                        <Button variant=\"contained\" disabled={!amount || !reason} onClick={() => addAmount()} >Add</Button>\r\n                    </Stack>\r\n                    <Stack justifyContent='center' mt={2}  >\r\n                        <Button variant='contained' size='large' component={Link} to={'/transactions'} >\r\n                            SHOW TRANSACTION\r\n                        </Button>\r\n                    </Stack>\r\n                </Paper>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n","import { Grid, Paper, Typography, Box, Button, Stack, TextField } from '@mui/material'\nimport React, { useState, useEffect } from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Dashboard from './components/Dashboard';\nimport Transactions from './components/Transactions';\n\n\nexport default function App() {\n  const [transaction, setTransaction] = useState([]);\n\n  useEffect(() => {\n    if (localStorage.getItem('transaction')) {\n      setTransaction(JSON.parse(localStorage.getItem('transaction')));\n    }\n  }, [])\n\n  const handleTransactions = (amount, reason) => {\n    setTransaction([...transaction, {\n      id: Math.round(Math.random() * 10000),\n      amount,\n      reason,\n      addedOn: new Date().toJSON()\n    }])\n\n    localStorage.setItem('transaction', JSON.stringify([...transaction, {\n      id: Math.round(Math.random() * 10000),\n      amount,\n      reason,\n      addedOn: new Date().toJSON()\n    }]));\n  }\n\n  const handleDeleteTransaction = (args) => {\n    console.log(args, \"args\");\n    let filteredTransactions = [];\n    args && args.length > 0 && args.map((id) => {\n      transaction.filter((t) => t.id !== id).map((t) => {\n        filteredTransactions.push(t);\n      })\n    });\n    console.log(\"filteredTransactions\", filteredTransactions)\n    setTransaction(filteredTransactions);\n    localStorage.setItem('transaction', JSON.stringify(filteredTransactions));\n  }\n\n  return (\n    <>\n      <Switch>\n        <Route exact path='/' component={() => <Dashboard handleTransactions={handleTransactions} />} />\n        <Route path='/transactions' component={() => <Transactions handleDeleteTransaction={handleDeleteTransaction} transaction={transaction} />} />\n      </Switch>\n    </>\n  )\n}\n","import { createTheme } from '@mui/material/styles';\r\n\r\nexport const customTheme = createTheme({\r\n    typography: {\r\n        fontFamily: `'Poppins', sans-serif`,\r\n    }\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ThemeProvider } from '@mui/styles';\nimport { customTheme } from './Themes';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nReactDOM.render(\n  <ThemeProvider theme={customTheme}>\n    <Router>\n      <App />\n    </Router>\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}